name: 'üß© Server tests'

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to test (dev, test or prod)'
        required: true
        type: string
        default: 'dev'
      test-client:
        description: 'Run client tests'
        required: false
        type: boolean
      test-server:
        description: 'Run server tests'
        required: false
        type: boolean

jobs:
  test-client:
    name: 'üîç Client tests'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Setup Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: 'Cache NPM packages'
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: 'Install Dependencies'
        run: npm install

      - name: 'Run tests'
        env:
          ENVFILE: .env.test
        run: npm test

      - name: 'Run ressource tests'
        run: cd Tools/RessourcesChecker/ && python3 main.py

  test-server:
    name: 'üîç Server tests'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Install PHP with mysqli extension'
        run: sudo apt-get update && sudo apt-get install php php-mysqli -y

      - name: 'Run skills tests - dev'
        if: github.event.inputs.environment == 'dev'
        env:
          DB_HOST: ${{ vars.DB_DEV_HOST }}
          DB_USER: ${{ vars.DB_DEV_USER }}
          DB_PASS: ${{ secrets.DB_DEV_PASS }}
          DB_NAME: ${{ vars.DB_DEV_NAME }}
        run: |
          php ./Tools/RessourcesChecker/skills.php '$DB_HOST' '$DB_USER' '$DB_PASS' '$DB_NAME'

      - name: 'Run skills tests - test'
        if: github.event.inputs.environment == 'test'
        env:
          DB_HOST: ${{ vars.DB_TEST_HOST }}
          DB_USER: ${{ vars.DB_TEST_USER }}
          DB_PASS: ${{ secrets.DB_TEST_PASS }}
          DB_NAME: ${{ vars.DB_TEST_NAME }}
        run: |
          php ./Tools/RessourcesChecker/skills.php '$DB_HOST' '$DB_USER' '$DB_PASS' '$DB_NAME'

      - name: 'Run skills tests - prod'
        if: github.event.inputs.environment == 'prod'
        env:
          DB_HOST: ${{ vars.DB_PROD_HOST }}
          DB_USER: ${{ vars.DB_PROD_USER }}
          DB_PASS: ${{ secrets.DB_PROD_PASS }}
          DB_NAME: ${{ vars.DB_PROD_NAME }}
        run: |
          php ./Tools/RessourcesChecker/skills.php '$DB_HOST' '$DB_USER' '$DB_PASS' '$DB_NAME'
