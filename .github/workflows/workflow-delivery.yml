name: '‚úã GameLife - Continuous Delivery'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose environment to build'
        required: true
        default: 'prod'
        type: choice
        options:
        - dev
        - test
        - prod
      actions:
        description: 'Choose platform to build'
        required: true
        default: 'both'
        type: choice
        options:
        - both
        - android
        - ios
      delivery:
        description: 'Delivery to stores (test & prod only)'
        required: true
        default: false
        type: boolean
      action-update:
        description: 'Update app version'
        required: true
        default: 'none'
        type: choice
        options:
        - none
        - build
        - build-android
        - build-ios
        - patch
        - minor
        - major
      whatsnew-fr:
        description: "What's new file - French (used for update)"
        required: false
        default: ''
        type: string
      whatsnew-en:
        description: "What's new file - English (used for update)"
        required: false
        default: ''
        type: string
      save-apk-artifact:
        description: 'Download apk artifact (android only)'
        required: false
        default: false
        type: boolean

jobs:
  tests:
    name: 'üîç Tests'
    uses: ./.github/workflows/step-tests.yml
    secrets: inherit
    with:
      environment: ${{ github.event.inputs.environment }}
      test-client: true
      test-database: false
      test-migration: false

  update-version:
    name: 'üìù Update version'
    runs-on: ubuntu-latest
    needs: tests
    if: github.event.inputs.action-update != 'none'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.environment }}
          submodules: 'recursive'
          persist-credentials: true
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: 'Update version'
        env:
          ACTION_UPDATE: ${{ github.event.inputs.action-update }}
          WHATSNEW_FR: ${{ github.event.inputs.whatsnew-fr }}
          WHATSNEW_EN: ${{ github.event.inputs.whatsnew-en }}
        run: |
          NEWVERSION=$(./Tools/Version/version.sh $ACTION_UPDATE --version)
          echo "VERSION=$NEWVERSION" >> $GITHUB_ENV

          ./Tools/Version/version.sh $ACTION_UPDATE "$WHATSNEW_FR" "$WHATSNEW_EN" --force

      - name: 'Commit changes'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "üìù Update version to $VERSION"
          git push origin HEAD:${{ github.ref_name }}

  android:
    name: 'ü§ñ Android'
    if: >
      github.event.inputs.actions == 'both' || github.event.inputs.actions == 'android'
    needs: 
      - tests
      - update-version
    uses: ./.github/workflows/step-android.yml
    secrets: inherit
    with:
      environment: ${{ github.event.inputs.environment }}
      delivery: ${{ github.event.inputs.delivery == 'true' }}
      save-apk-artifact: ${{ github.event.inputs.save-apk-artifact == 'true' }}

  ios:
    name: 'üçè iOS'
    if: >
      github.event.inputs.actions == 'both' || github.event.inputs.actions == 'ios'
    needs: 
      - tests
      - update-version
    uses: ./.github/workflows/step-ios.yml
    secrets: inherit
    with:
      environment: ${{ github.event.inputs.environment }}
      delivery: ${{ github.event.inputs.delivery == 'true' }}

  enable-test-account:
    name: 'üîë Enable test account'
    runs-on: ubuntu-latest
    needs: [ android, ios ]
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          persist-credentials: true
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: 'TODO'
        run: echo "TODO"

      # - name: 'Install PHP with mysqli extension'
      #   run: sudo apt-get update && sudo apt-get install php php-mysqli -y

      # - name: 'Enable test account - Test'
      #   run: |
      #     php ./Tools/Maintenance/setTestAccount.php \
      #     '${{ vars.DB_TEST_HOST }}' \
      #     '${{ vars.DB_TEST_USER }}' \
      #     '${{ secrets.DB_TEST_PASS }}' \
      #     '${{ vars.DB_TEST_NAME }}' \
      #     1

      # - name: 'Enable test account - Prod'
      #   run: |
      #     php ./Tools/Maintenance/setTestAccount.php \
      #     '${{ vars.DB_PROD_HOST }}' \
      #     '${{ vars.DB_PROD_USER }}' \
      #     '${{ secrets.DB_PROD_PASS }}' \
      #     '${{ vars.DB_PROD_NAME }}' \
      #     1

  notify:
    name: 'üì£ App Published'
    runs-on: ubuntu-latest
    needs: [ android, ios ]
    if: success() || (needs.android.result == 'success' || needs.ios.result == 'success')
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          persist-credentials: true
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: 'Get app version & delivery status'
        run: |
          GL_VERSION=$(./Tools/Version/version.sh --version)

          echo "Version: $GL_VERSION"
          echo "GL_VERSION=$GL_VERSION" >> $GITHUB_ENV

          if [[ "$APPSTORE_STATUS" == "success" && "$PLAYSTORE_STATUS" == "success" ]]; then
            echo "NOTIFICATION_TEXT=GameLife v$GL_VERSION a √©t√© envoy√©e sur le PlayStore ü§ñ et l'AppStore üçè avec succ√®s üéâ"
          elif [[ "$APPSTORE_STATUS" == "success" && "$PLAYSTORE_STATUS" == "failure" ]]; then
            echo "NOTIFICATION_TEXT=GameLife v$GL_VERSION a √©t√© envoy√©e sur l'AppStore üçè avec succ√®s üéâ"
          elif [[ "$APPSTORE_STATUS" == "failure" && "$PLAYSTORE_STATUS" == "success" ]]; then
            echo "NOTIFICATION_TEXT=GameLife v$GL_VERSION a √©t√© envoy√©e sur le PlayStore ü§ñ avec succ√®s üéâ"
          elif [[ "$APPSTORE_STATUS" == "failure" || "$PLAYSTORE_STATUS" == "failure" ]]; then
            echo "NOTIFICATION_TEXT=GameLife v$GL_VERSION n'a pas pu √™tre envoy√©e sur le PlayStore ü§ñ ou l'AppStore üçè"
          else
            echo "NOTIFICATION_TEXT=GameLife v$GL_VERSION n'a pas pu √™tre envoy√©e"
          fi

      - name: 'Send notification to Discord'
        env:
          GL_VERSION: ${{ env.GL_VERSION }}
          NOTIFICATION_TEXT: ${{ env.NOTIFICATION_TEXT }}
          NEXT_WORKFLOW_URL: 'https://github.com/OxyFoo/GameLife/actions/workflows/prod-deploy.yml'
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          curl \
            -H "Content-Type: application/json" \
            -X POST \
            -d "{\"content\":\"$NOTIFICATION_TEXT\",\"embeds\":[{\"title\":\"Workflow\",\"url\":\"$NEXT_WORKFLOW_URL\",\"color\":16711680,\"fields\":[{\"name\":\"Version\",\"value\":\"$GL_VERSION\",\"inline\":true}]}]}" \
            $DISCORD_WEBHOOK_URL
